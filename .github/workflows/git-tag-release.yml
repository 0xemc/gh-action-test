name: Release via Git Tags
on:
  push:
    branches:
      - staging
    paths:
      - "package.json"
    # Pattern matched against refs/tags
    tags:
      - "some-prefix/*"
jobs:
  release-carbonmark-api:
    # block actions initiated by this or other workflows
    if: github.actor != 'github-actions[bot]'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0

      - name: Install jq
        run: sudo apt-get install jq

      - name: Set RELEASE_VERSION from tag or package.json
        run: |
          if [[ "${GITHUB_REF#refs/tags/some-prefix/}" != "$GITHUB_REF" ]]; then
            echo "RELEASE_VERSION=${GITHUB_REF#refs/tags/some-prefix/}" >> $GITHUB_ENV
          else
            version=$(jq -r .version package.json)
            echo "RELEASE_VERSION=$version" >> $GITHUB_ENV
          fi

      - name: Debug RELEASE_VERSION
        run: echo $RELEASE_VERSION

      - name: Debug git
        run: |
          echo "Current branch:"
          git rev-parse --abbrev-ref HEAD
          echo "All tags:"
          git tag

      - name: Get previous tag
        id: previousTag
        run: |
          name=$(git --no-pager tag --sort=creatordate --merged ${{ github.ref_name }} | grep '^some-prefix/' | tail -2 | head -1)
          echo "previousTag: $name"
          debug_output=$(git --no-pager tag --sort=creatordate --merged some-prefix/v1.0.2 | grep '^some-prefix/')
          echo "Debug output: $debug_output"
          echo "previousTag=$name" >> $GITHUB_ENV

      - name: Generate release notes
        id: release_notes
        run: |
          RELEASE_NOTES=$(git log ${{ env.previousTag }}..${{ github.ref_name }} --pretty=format:"- %s (%an, %cd)" -- ./packageB)
          echo "::set-output name=body::$RELEASE_NOTES"

      - name: Build Changelog
        id: github_release
        uses: mikepenz/release-changelog-builder-action@v4
        with:
          fromTag: "${{ env.previousTag }}"
          toTag: "${{ github.ref_name }}"
          path: "./packageB"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Display Changelog
        run: echo "${{ steps.build_changelog.outputs.changelog }}"

      - name: Create Release
        uses: mikepenz/action-gh-release@v0.2.0-a03 #softprops/action-gh-release
        with:
          body: ${{steps.github_release.outputs.changelog}}
